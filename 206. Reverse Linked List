/*
A linked list has nodes that contain references. If we wish to reverse the linked list then we must change the order in which the nodes are referenced
or in other words change the direction of the flow.
To do this we must instead reference the actual last node [n] to the start and reference the next one as [n-1]
*/
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
            prev = None
            curr = head

            while curr:
                next = curr.next
                curr.next = prev
                prev = curr
                curr = next

            return prev
