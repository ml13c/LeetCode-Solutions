DESCRIPTION:
You are given three integers x, y, and z, representing the positions of three people on a number line:

    x is the position of Person 1.
    y is the position of Person 2.
    z is the position of Person 3, who does not move.

Both Person 1 and Person 2 move toward Person 3 at the same speed.

Determine which person reaches Person 3 first:

    Return 1 if Person 1 arrives first.
    Return 2 if Person 2 arrives first.
    Return 0 if both arrive at the same time.

Return the result accordingly.
SOLUTION:

class Solution {
public:
    int findClosest(int x, int y, int z) {
        if(abs((z-y))>abs((z-x))){
            return 1;
        }
        else if(abs((z-y))<abs((z-x))){
            return 2;
        }
        else{
            return 0;
        }
    }
};
EXPLANATION:
You use z as an anchor point. Then find the difference from y and x to see who gets there first since they both move at the same speed so we only care about their position.
Sometimes you get negative when comparing so you need to do the absolute value when comparing position differences to z.
